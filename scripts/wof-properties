#!/usr/bin/env python

import sys
import os.path
import logging
import json
import pprint

import mapzen.whosonfirst.utils

if __name__ == '__main__':

    import optparse
    opt_parser = optparse.OptionParser()

    opt_parser.add_option('-s', '--source', dest='source', action='store', default=None, help='')
    opt_parser.add_option('-i', '--id', dest='id', action='store', default=None, help='')
    opt_parser.add_option('-r', '--raw', dest='raw', action='store_true', default=False, help='')

    opt_parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False, help='Be chatty (default is false)')

    options, args = opt_parser.parse_args()

    if options.verbose:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    source = os.path.abspath(options.source)
    id = int(options.id)

    feature = mapzen.whosonfirst.utils.load(source, id)
    props = feature['properties']

    if options.raw:
        print(json.dumps(props))
    else:
        print(pprint.pformat(props))

    sys.exit()
